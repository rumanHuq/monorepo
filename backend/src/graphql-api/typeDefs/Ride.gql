enum RideStatus {
  ACCEPTED
  FINISHED
  CANCELED
  REQUESTING
  ON_ROUTE
}

type PickupInfo {
  lat: Float!
  lng: Float!
  address: String!
}

type DropOffInfo {
  lat: Float!
  lng: Float!
}

type Ride @entity {
  _id: String! @id
  status: RideStatus! @column
  pickupInfo: PickupInfo! @column
  dropOffInfo: DropOffInfo! @column
  price: Float! @column
  duration: String! @column
  distance: String! @column
  createdAt: String! @column(overrideType: "Date")
  updatedAt: String @column(overrideType: "Date")
  driver: User @link
  passenger: User! @link
}


input PickupInput {
  lat: Float!
  lng: Float!
  address: String!
}

input DropOffInput {
  lat: Float!
  lng: Float!
}

extend type Mutation {
  RIDE_REQUEST(pickupInfo: PickupInput!, dropOffInfo: DropOffInput!, price: Float!, duration: String!, distance: String!): Ride!
}

extend type Query {
  RIDE_GET_NEARBY_DRIVER: Ride
}

extend type Subscription {
  RIDE_DRIVER_CURRENT_LOCATION: Ride
}
