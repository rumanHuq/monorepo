version: "2.4"
services:
  backend:
    tty: true
    build:
      context: .
      dockerfile: ./backend/dev.Dockerfile
    environment:
      - HOST_DB=database
    volumes:
      - ./package.json:/app/package.json
      - ./babel.config.js:/app/babel.config.js
      - ./.eslintrc:/app/.eslintrc
      - ./tsconfig.json:/app/tsconfig.json
      - ./backend:/app/backend
      - /app/node_modules
      - /app/backend/node_modules
    depends_on:
      database:
        condition: service_healthy

  frontend:
    tty: true
    build:
      context: .
      dockerfile: ./frontend/dev.Dockerfile
    volumes:
      - ./package.json:/app/package.json
      - ./babel.config.js:/app/babel.config.js
      - ./.eslintrc:/app/.eslintrc
      - ./tsconfig.json:/app/tsconfig.json
      - ./frontend:/app/frontend:rw
      - /app/node_modules
      - /app/frontend/node_modules
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 80:80

  database:
    image: mongo:4
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27010"
