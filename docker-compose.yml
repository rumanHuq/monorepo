# #HOST_PORT:DOCKER_PORT

version: "2.4"
services:
  #############################################################################
  frontend:
    container_name: "MONO_FRONTEND"
    tty: true
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: dev
    environment:
      - HOST_BACKEND=backend
      - NODE_ENV=development
    volumes:
      - ./common:/app/common
      - ./.vscode:/app/.vscode
      - ./package.json:/app/package.json
      - ./babel.config.js:/app/babel.config.js
      - ./.eslintrc.js:/app/.eslintrc.js
      - ./tsconfig.json:/app/tsconfig.json
      - ./frontend:/app/frontend:rw
      - frontend-deps:/app/node_modules
      - frontend-nested-deps:/app/frontend/node_modules
  #############################################################################
  backend:
    tty: true
    container_name: "MONO_BACKEND"
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: dev
    environment:
      - HOST_DB=database
      - NODE_ENV=development
      - PORT=3000
    env_file:
      - SECRETS/dev.env
    volumes:
      - ./common:/app/common
      - ./package.json:/app/package.json
      - ./babel.config.js:/app/babel.config.js
      - ./.eslintrc.js:/app/.eslintrc.js
      - ./tsconfig.json:/app/tsconfig.json
      - ./backend:/app/backend:rw
      - backend-deps:/app/node_modules
      - backend-nested-deps:/app/backend/node_modules
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
  ############################################################################
  database:
    container_name: "MONO_DATABASE"
    image: mongo:4.2.8
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
    volumes:
      - ~/mono/data/db:/data/db
    ports:
      - "27010:27017"
    logging:
      driver: none
  ############################################################################
  redis:
    container_name: "MONO_REDIS"
    image: redis:5.0.6-alpine
    healthcheck:
      test: redis-cli ping
  # #############################################################################
  reverse-proxy:
    container_name: "MONO_PROXY"
    image: nginx:1.19.1
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: none
  # #############################################################################
volumes:
  frontend-deps:
  frontend-nested-deps:
  backend-deps:
  backend-nested-deps:
